x-app: &app
  image: ghcr.io/akibaat/itchbot-docker/python:0.6
  depends_on:
    - db
x-db: &db
  image: postgres:16.2
x-pgbouncer: &pgbouncer
  image: edoburu/pgbouncer
  depends_on:
    - postgres

services:
  bot:
    <<: *app
    networks:
      - shared
    volumes:
      - ./app:/app
    command: ["python", "main.py"]
    environment:
      - DB=${DB:-itchbot}
      - DB_USER=${DB_USER:-itchbot}
      - DB_PASSWORD=${DB_PASSWORD:-docker}
      - PROXY_LIST
      - PROXY_USER
      - PROXY_PASSWORD
      - DISCORD_API_KEY
      - ITCH_API_KEY
      - ITCH_COLLECTION_ID
      - ITCH_USER
      - ITCH_PASSWORD
      - SDL_VIDEODRIVER=dummy
      - PYTHONUNBUFFERED=1
  web:
    <<: *app
    networks:
      - shared
      - web
    volumes:
      - ./app:/app
    command: ["python", "web.py"]
    environment:
      - DB=${DB:-itchbot}
      - DB_USER=${DB_USER:-itchbot}
      - DB_PASSWORD=${DB_PASSWORD:-docker}
      - DISCORD_API_KEY
      - DISCORD_CLIENT_ID
      - DISCORD_CLIENT_SECRET
      - DISCORD_REDIRECT_URI=https://${DOMAIN}/callback
      - FLASK_SECRET
      - ITCH_API_KEY
      - ITCH_COLLECTION_ID
      - PYTHONUNBUFFERED=1
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.web.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.web.tls=false"
  postgres:
    <<: *db
    command:
      - "postgres"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.track=all"
      - "-c"
      - "shared_buffers=6GB"
    networks:
      - shared
    environment:
      - POSTGRES_DB=${DB:-itchbot}
      - POSTGRES_USER=${DB_USER:-itchbot}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-docker}
    volumes:
      - db:/var/lib/postgresql/data
      - ./backup:/backup
  db:
    <<: *pgbouncer
    networks:
      - shared
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - AUTH_TYPE=scram-sha-256
      - DB_HOST=postgres
      - DB_NAME=${DB:-itchbot}
      - DB_USER=${DB_USER:-itchbot}
      - DB_PASSWORD=${DB_PASSWORD:-docker}


volumes:
  redis:
  db:

networks:
  shared:
    name: shared
  web:
    name: web
    external: true
